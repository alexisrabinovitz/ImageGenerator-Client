import React, {useState, useEffect} from 'react'
import {Loader, Card, FormField} from '../components'
import PropTypes from 'prop-types'

// const RenderCards = ({data, title}) => {
//     if(data?.length > 0) {
//     return data.map((post) => <Card key={post._id} {...post}/> )
//     } 
//     return (
//         <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
//     )
// } 

const RenderCards = ({data, title}) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
  );
};

RenderCards.propTypes = {
  data: PropTypes.arrayOf(PropTypes.object), // Assuming each post is an object
  title: PropTypes.string.isRequired,
};

const Home = () => {
    const [loading, setLoading] = useState(false)
    const [allPosts, setAllPosts] = useState(null)

    const [searchText, setSearchText] = useState('')
    const [searchedResults, setSearchedResults] = useState(null)
    const [searchTimeout, setSearchTimeout] = useState(null)

    const fetchPosts = async () => {
        setLoading(true);

        try {
            const response = await fetch('https://image-generator-5s68.onrender.com/api/v1/post', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }, 
            })
            if(response.ok) {
                const result = await response.json()
                setAllPosts(result.data.reverse())
            }
        } catch (error) {
            alert(error)
        } finally {
            setLoading(false)
        }
    }
    useEffect(() => {
        fetchPosts()
    }, [])

//    const handleSearchChange = (e) => {
//         clearTimeout(searchTimeout)
//         setSearchText(e.target.value)
    
//         setSearchTimeout(
//           setTimeout(() => {
//             const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()))
//             setSearchedResults(searchResult)
//           }, 500),
//         )
//       }

const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    const searchTextValue = e.target.value;
    setSearchText(searchTextValue);
  
    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(searchTextValue.toLowerCase()) ||
            item.prompt.toLowerCase().includes(searchTextValue.toLowerCase())
        );
        setSearchedResults(searchResult);
      }, 500)
    );
  };

   

  return (
    <section className='mx-auto max-w-7xl'>
        <div>
            <h1 className='font-extrabold text-[#222328] text-[32px]'>The Community Showcase</h1>
            <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>Browse through a collection of imaginative and visually stunning images generated by AI</p>
        </div>

        <div className='mt-16'>
            <FormField 
            labelName='Search posts'
            type='text'
            name='text'
            placeholder='Search posts'
            value={searchText}
            handleChange={handleSearchChange}/>
        </div>
        <div className="mt-10">
        {loading ? (
          <div className="flex items-center justify-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for <span className="text-[#222328]">{searchText}</span>:
              </h2>
            )}
            <div className="grid grid-cols-1 gap-3 lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2">
              {searchText ? (
                <RenderCards
                  data={searchedResults}
                  title="No Search Results Found"
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title="No Posts Yet"
                />
              )}
            </div>
          </>
        )}
      </div>
      
    </section>
  )
}

export default Home
